import{A as t,C as m,a as b}from"./index-adccf17c.js";async function g(){const{data:e,error:a}=await t.from("cabins").select("*");if(a)throw console.error(a),new Error("Cabins could not be loaded");return e}async function h(e,a){var n,l;const r=(l=(n=e.image)==null?void 0:n.startsWith)==null?void 0:l.call(n,m),i=e.image.name?`${Math.random()}-${e.image.name}`.replaceAll("/",""):"",c=r?e.image:`${m}/storage/v1/object/public/cabin-images/${i}`;let o=t.from("cabins");a||(o=o.insert([{...e,image:c}])),a&&(o=o.update({...e,image:c}).eq("id",a));const{data:s,error:d}=await o.select().single();if(d)throw console.error(d),new Error("Cabin could not be created");if(r)return s;const{error:u}=await t.storage.from("cabin-images").upload(i,e.image);if(u)throw await t.from("cabins").delete().eq("id",s.id),console.error(u),new Error("Cabin image could not be uploaded and the cabin was not created");return s}async function p(e){const{data:a,error:r}=await t.from("cabins").delete().eq("id",e);if(r)throw console.error(r),new Error("Cabin could not be deleted");return a}function w(){const{isLoading:e,data:a,error:r}=b({queryKey:["cabins"],queryFn:g});return{isLoading:e,error:r,cabins:a}}export{h as c,p as d,w as u};
